Checked Possibilities:
- Different spectra from NIS
- Different transmittance
- spherical albedo
- Path radiance
- mu

- (FIXED) Problem seems to be with asd reference spectrum, unsure what --> SOLVED
    tarp03_r = super_resample(mean(tarp03,1),asd_wvl,neon_wvl,neon_fwhm)'./100;
    tarp3_asd08 = super_resample(mean(tarp03,1)',asd_wvl,neon_wvl,neon_fwhm)./100;
    -- In tarp03_r mean(tarp03,1) and asd_wvl have dimensions [1x2151]
       while neon_wvl and neon_fwhm have dimension [152x1]
    -- While in tarp03_asd08, all inputs are in [2151x1] or [152x1] there should be
       no difference in results but there must be some error in super_resample
       that is dependent on this. While in Python they are vectors [2151,] and
       [152,] so there is not ambiguity.
    -- (THE FIX) fixed by moving transpose(') inside of super_resample called

- (FIXED) calc_rmse problem, **2 was outside of sum instead of inside

- (FIXED) Time Matching Need to do time matching in solving function?
    -- Added time matching function, it made very little difference

- Problem:
    Now Standard RMSE values match, still difference in Enhanced, and Enhanced
    with Adjacency need to compare spectra

    - Checked NIS (Obs) Spectra - they match
    - Checked reference tarp, they match
    - Checked transmittance, they match

    -- (FIXED) baseline_flx['downwelling'] = baseline_flx['downwelling_direct'],
      This was corrected it was due to an Error in modtran_tools.load_flx() that
      gave incorrect values for downwelling irradiance
    -- (FIXED) Downwelling irradiance values didn't match, was using wrong ssim
      zwvl and nwvl for resampling in python code

    -- (RESOLVED) Discrepancy was caused by order of resampling.

    -- IN PROGRESS:
        Solve same issue for adjacency_correction,
        -- (FIXED) rho_a_I was reversed (was long to short), reset to normal wavelength order (short ~350nm to long ~2500nm)
        -- Still not exact matching
        -- Need to Check if adjacency_correction( type == standard) is fixed to match the irradiance version of the function
Still difference in rho_a_R

FOUND ERRORS
- was resampling to neon_wvl instead of just truncating to the correct indices,
    replaced:
      spectrum = super_resample(...)
    with:
      spectrum = obs['spectra'][n,0:152]
- I verified that after the above fix the mean reflectance values were the same
  between python and matlab/octave
- plot_results() was already taking the averages, fixed so it will plot
  averages without affecting subsequent code
- Added averaging to calc_rmse() to exactly replicate matlab function
